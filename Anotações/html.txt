HTML -> Hypertext Markup Language

No vscode, usar ! + enter para colocar o esqueleto padrão.
div#id --> cria uma div com id

HTML não é case sensitive.

Um elemento é tudo entre a abertura e o fechamento de uma tag.
Elementos inline não causam quebra de linha.
Elementos em bloco quebram linha.

O HTML ignora todos os espaços que colocamos e quebras de linha.
<br> para quebra de linha
&nbsp; para um espaço
	Caracteres reservados podem ser incluídos no html puro por esse formato: &IDENTIFICADOR;
	
O BODY NÃO POSSUI UMA ALTURA DEFINIDA POR PADRÃO.	

--------------------------------- Comentário ---------------------------------------------
<!-- 
	-->
--------------------------------- Atributos ----------------------------------------------
Existem atributos booleanos, os quais não necessitam do ="texto", mas que permitem a sua adição.
Um desses atributos é o disabled.	
	
  ATRIBUTOS GLOBAIS --> atributos disponíveis para todas as tags.
class 
contenteditable="true"   --> define se o conteúdo é editável ou não
data-*      --> * pode ser substituido por qualquer coisa (separação sempre por traços
hidden      --> esconde o conteúdo (é um atributo booleano sem necessidade do texto)
id
style 
tabindex    --> ao apertar tag a página irá destacar a ordem estabelecida por meio deste atributo(o conteúdo são números em ordem crescente)
title		--> definir um título

-------------------------------- Tags Importantes -----------------------------------------

<!DOCTYPE html>
	É a primeira coisa que deve vir em um arquivo html. Não é uma tag de marcação, servindo para indicar ao navegador da web qual versão do HTML a página foi escrita.

<html></html>
	A primeira tag propriamente dita de um arquivo html. Todas as outras tags devem ser filhas ou descedentes deta tag. Duas tags muito importantes, head e body, normalmente são filhas diretas de <html>
	Atributos:
		lang --> define a linguagem

<head></head>
	É o cabeçalho de um arquivo em html. As informações contidas "dentro" desta tag são de interesse somente do navegador, não sendo exibidas para o visitante do site. Tags de metadados, de título e de inclusão de arquivos css normalmente estão presentes aqui.
	
<body></body>
	É o corpo de um arquivo html. As informações contidas aqui são mostradas para o visitante de um site.	

------------------------------ Tags usadas no head ----------------------------------------
<title></title>
	Essa tag é incluído dentro da <head> e é responsável por atribuir um título para a página web. Esse título é mostrado no texto presente na aba do navegador.
	
<meta/>
	Utilizada dentro do head, fornecendo metadados sobre o documento html. Tais informações, por serem metadados, não são exibidas na página. 
	Atributos:
		charset = "UTF-8" --> indica ao navegador usar o padrão UNICODE.
		name="" --> define sobre o que a tag meta se refere
			- author: nome do autor (deve estar contido no atributor content)
			- description: descrição que os motores de busca mostram.
			- robots: definir o que o robô de busca deve fazer (raramente mexemos)
			
		content="" --> conteúdo da tag (nome do autor, no caso de name="author")
		
FAVICON --> ícone que aparece na aba
<link rel="icon" href="link"/>

--------------------------------- Web Semântica ------------------------------------------

Controlar a organização e apresentação do conteúdo.

<blockquote></blockquote> --> semânticamente mais adequado do que usar <p>.

--------- Seções comuns em documentos html

Cabeçalho <header>
	Podemos usar um header no início da página. Ele será global.
	Podemos ter headers dentro de sections.
	Headers dentro de headers quebram com a semântica.
Navegação <nav>
	Geralmente vêm dentro do header, mas pode estar em outros lugares.
	Podemos ter mais de um nav na página.
Conteúdo principal <main>
	Apenas um por página.
	Main filho direto do body.
Artigo <article>	
	Constrói blocos de conteúdo que são relacionados.
Barra Lateral <aside>
	Coisas do conteúdo principal de forma mais reduzida. 
	Costuma ficar de lado na página.
		Exemplos de uso: glossário, links extras, etc.
Rodapé <footer>
	Fica no fim da página.
	Armazena informações como autor, copyright, etc.
Seção <section>
	Serve para colocar seções.
	Geralmente colocamos um título e então o conteúdo
	Pode estar dentro de outros elementos semânticos.


------------------------------------------------------------------------------------------

<hX></hX>
	Onde X = 1..6
	É responśavel pelo destaques de título e subtítulos. Quando menor for o número na tag, maior será o título na página.
	Em geral colocamos apenas um h1 por página. Se outro for necessário, então talvez seja melhor criar uma página html em separado.
	
<p></p>
	Responsável pela criação de parágrafos.
	Atributo:
		title --> aparecerá quando passarmos o mouse por cima do elementoeu c
	
<br> 
	Define uma quebra de linha.
	
------------------------------ Tags de Formatação ----------------------------------------
<b></b> ou <strong></strong>
	Deixa o texto inserido em negrito.
	
<i></i> ou <em></em>
	Deixa o texto inserido em itálico.
	
<small></small>
	Deixa o texto inserido pequeno.
	
<big></big>
	Deixa o texto inserido grande.

<mark></mark>
	Deixa o texto inserido com fundo marcado.

--------------------------- Links -----------------------------------------------------
<a></a> (anchor = âncora) Elemento âncora
	Utilizada para adicionar links. 
	Atributos:
		href = "link" --> finalidade de adicionar o link, para quando o usuário clicar ser direcionado para a página selecionada.
				não apenas links:
					fragmentos --> manda a tela para parte onde o id especificado em href="#id" está. 
					email --> abre o cliente de email do computador para poder enviar (mailto:)
					telefone (tel:)
		target --> especifica onde abrir o site vinculado
			Valores possível:
				"_blank" --> abre o documento vinculado em uma nova janela ou guia.
				"_self" --> abre o documento vinculado no mesmo quadro em que foi clicado
		download --> como salvar o conteúdo do link

---------------------------- Eventos de click ------------------------------------------------
onclick="função" --> executa a função quando ocorre um click

---------------------------- Listas ---------------------------------------------------------

<li> --> elementos de uma lista
<li>*5 --> no vscode cria 5 elementos <li>

Lista ordenadas:
<ol>

Lista não ordenadas:
<ul>

			-------- Listas de Descrição ---------------
	Objetivo: marcar um conjunto de itens e suas descrições
	
<dl></dl>   --> description list
<dt></dt>   --> description term
<dd></dd>   --> descrição (é recuado em relação ao dt)


--------------------------- Citações -----------------------------------------------------

<blockquote></blockquote>
	Atributos:
		cite="origem" --> indica a origem da citação
		
<cite></cite> --> normalmente dentro de um link, serve para ajudar na questão da acessibilidade

<q></q> --> para citações curtas que não precisam de parágrafos ou quebras de linha


-------------------------- Abreviações ----------------------------------------------------
<abbr></abbr>
	Atributos:
	title="explicação da abreviação"
	
O conteúdo do elemento fica pontilhado embaixo, indicando que tem alguma coisa ali.

-------------------------- Representação de códigos -----------------------------------------

<code></code>  --> partes genéricas de código

<pre></pre>  ---> blocos de código, pois essa tag mantém os recuos 

costumeiro colocar o code dentro do pre

-------------------------- Elementos Genéricos ---------------------------------------------
<div></div>
	serve mais pra agrupar conteúdo
	ideia de bloco (ou seja, ocorre quebra de linha)
	
<span></span>
	serve mais pra agrupar textos
	ideia de linha (ou seja, não ocorre quebra de linha)
	
--------------------------------------------------------------------------------------------
<nav></nav> --> uma seção com links de navegação (aspecto semântico do html)
	
--------------------------- Tabelas --------------------------------------------------------
<table></table> --> cria a tabela

<caption></caption> --> descrição para a tabela
<colgroup></colgroup> --> tag para se agrupar as colunas
	<col> --> indica cada coluna
		atributos
			span="N" --> indica a quantidade de colunas que engloba


<thead></thead> --> cabeçalho da tabela
<tbody></tbody> --> corpo da tabela
<tfoot></tfoot> --> rodapé da tabela
	Essas tags servem para dar mais significado(aspecto semântico) para a tabela
	
<tr></tr> --> table row
<th></th> --> célula cabeçalho
	atributos:
		rowspan="N" --> quantidade N de linhas que a celula ocupa
		colspan="N" --> quantidade N de colunas que a célula ocupa
		scope="" --> para facilitar a acessibilidade
<td></td> --> célula de dados



não usar para criar layouts

--------------------------------------- Videos ---------------------------------------
<video></video>
	atributos:
		src --> indica o source do video
		controls --> faz aparecer os controles de vídeo
		width e height --> altera o tamanho 
		autoplay --> inicia automaticamente
		preload="auto" --> baixa antes mesmo de clicar
				"metadata" --> baixa apenas o essencial
				"none" --> não faz nada
		loop --> quando acabar, começa de novo
		muted --> se tiver mutado, faz autoplay
		poster="caminho" --> imagem de fundo até começar o video		
		
		
<source></source>--> colocamos dentro de <video></video> 
	src --> indica o source do video
	type --> indica o tipo do video (video/mp4, por exemplo)
	
-------------------------------------- Audios --------------------------------------------
<audio></audio>
	semelhante à tag de vídeos	
		poster, altura e largura não funcionam
	
-------------------------------------- iframe --------------------------------------------
	Permite incluir um site diretamente no nosso projeto.
	
<iframe></iframe>
	src
	height
	width
	title (acessibilidade)
	allowfullscreen
	frameborder (define se tem borda)
	
------------------------------------ Imagens ----------------------------------------------
<img/>
	Serve para inserir imagens.
	Atributos:
		src = "fonte" --> indica de onde a imagem vem. Pode se rum link para a web ou o caminho de uma imagem na máquina.
		title = "text" --> usado para descrição. É o texto que irá aparecer quando passarmos o mouse por cima da imagem.
		alt = "texto" --> semelhante ao title, mas o texto informado aparece caso a imagem não possa ser carregada.
		width
		height (escolher so um deles pra manter proporção)
		
<figure></figure>
	coloca um <img> dentro
	<figcaption></figcaption> --> semânticamente define que o conteúdo é um título para a img dentro do figure
		
----- <svg> </svg>
	Marcação para imagens
	Imagem vetorizada (possível editar via css)
	
No conteúdo da tag colocamos o que queremos. Ex: circle


------------------------------------ Formulários ------------------------------------------------
<form> </form> --> define um formulário
	Atributos:
		action="" --> para onde o formulário será submetido. Se for vazio será enviado para a mesma página
		method="" --> GET | POST,  método de envio (POST esconde as informações, GET aparece na url)
		
	não é recomendado criar um form dentro de outro 
	
------------------------
<fieldset></fieldset> --> faz o agrupamento de campos do formulário. Mais semântico e bom para acessibilidade.
	Atributos:
		disabled --> desabilita todos os elementos internos, não enviando seu conteúdo
		form="id" --> permite ligar o fieldset com algum formulário, permitindo que ele se encontra fora da tag form
		name="" --> definir nome, apenas
		
	<legend></legend> --> primeiro elemento do fieldset, dá o nome para o agrupamento 
	
-----------------------------	
<label></label> --> serve para associar e identificar uma ou mais tags de entrada de dados
		inputs podem estar dentro de uma label. Neste caso, quando vc clica na label o cursor já é colocado dentro do input
		Alternativamente, podemos colocar inputs fora das labels e fazer um link. Para isso, colocamos o atributo for="id_input" na label. Não dá pra fazer isso com todas as tags de form.
	
-------------------------	
<button></button> --> botão
	usado primariamente para enviar os formulários
	É estilizado pelo user client, mas é possível alterar pelo css.
	
	Atributos:
		type="" --> submit, realiza o envio do formulário
					reset, limpa o formulário
		autofocus --> quando a página é carregada o navegador procura o primeiro elemento com autofocus e foca nele. Se clicarmos, já irá executar a ação atrelada.
		disabled --> não permite apertar o botão
		name="" 
		value=""
		form="" --> linka com um formulário
		
<datalist id=""></datalist> --> seletores. 
	É importante colocar o id.
	<option></option> --> cada um apresenta uma opção  
	
------------------------	
<input>
	Atributos:
		type="" --> text, aceita texto
					date, permite escolher uma data
					number, aceita apenas números
					email, permite enviar apenas emails.
					file, permite carregar um arquivo
					password, mascara o texto escrito
		autocomplete="" --> autocompletar, baseado em informação em cache
		autofocus --> automaticamente focado. Apenas um por página (mais de um foca no primeiro). Quando focado, o cursor vai direto pro imput e dá pra digitar.
		disabled --> desabilita
		value="" --> valor padrão no campo
		readonly (quase todos) --> apenas leitura.Não fica opaco que nem o disabled.
		form="" (quase todos)--> linka com um form
		name="" --> importante para poder resgatar os dados(BACKEND)
		required (quase todos) --> faz com que o input seja obrigatório
		placeholder="Digite seu email" --> é o texto que aparece antes de digitar 
			(mesmo com essa feature, é importante usar o label por questão de acessibilidade)
			
			
			
		type="password"
			Atributos:
				minlength="" --> mínimo de caracteres
				maxlength="" --> máximo de caracteres
				size="" --> define o tamanho do campo
				pattern="" --> usa expressões regulares. Apenas permite certos caracteres
				title="" --> se aparecer erro por causa do pattern isso aparece junto com a mensagem
				placeholder=""
				read-only
				disabled
				inputmode="" --> altera o uso do teclado em smartplhones 
						alfanumerico ou apenas numérico
				autocomplete="" --> on: current-password ou new-password
									off: desabilita
									new-password: sugere nova senha
									
		type="email" --> valida o email antes de enviar
			placeholder
			readonly
			disabled
			value
			required
			multiple --> permite colocar um ou mais emails separados por vírgula.
			minlength
			maxlength
			size
			pattern --> expressão regular para validar. Bom para aceitar apenas certos domínios.	
			list="id" --> id de uma datalist, a qual conterá as opções de email

		type="url" --> espera que o usuário digite uma url. Validará
			placeholder
			readonly
			disabled
			value
			required
			minlength
			maxlength
			size
			pattern
			list
			spellcheck="true" --> habilita a verificação ortográfica para este input
			
		type="file" --> usuário poderá escolher um ou mais arquivos para enviar
					   necessário usar enctype="multipart/form-data"
			value="" --> value irá conter o arquivo sendo enviado (apenas um)
			files="" --> conterá a lista de arquivos sendo enviados
			accept="" --> descreve o tipo de arquivos que serão aceitos
				"video/*" --> todo tipo de video
			multiple --> permite selecionar mais de um arquivo 
		
		type="color" --> interface para selecionar uma cor. Envia uma cor em rgb
			value="" --> armazena a cor selecionada, se inválido o preto será exibido
			list
			
		
		type="checkbox" --> caixas que podem ser marcadas
							Selecionar um valor para ser enviado.
							Se não selecionado, não será enviado nenhum dado.
			value="" --> o valor que aquele campo contém. Por padrão é on.
			checked --> deixa marcado por padrão	
			name="" --> se o nome for igual para dois checkbox então eles estarão rrelacionados	
		
		
		type="hidden" --> campo escondido, mas é enviado junto
		
		type="radio" --> selecionar uma opção entre várias opções
			checked --> indica que o campo foi marcado
			value="" --> valor que aquele campo contém
			name="" --> os nomes tem que ser iguais para relacionar
			
		type="search" --> para campos de busca 
			list
			pattern
			aria-label="" --> serve para quando não tivermos o label
			
		type="number" --> permite apenas números
			min/max
			step="" --> de quantos em quantos se pula o valor	
			
		type="range" --> controle para selecionar um valor numérico
						 slider ou dial control
			min/max
			step
			
		type="date" --> campo de data (não funciona em alguns navegadores)
			value="" --> armazena a data inserida
		type="datetime-local --> data e horário
		type="month" --> meses
		type="hour" --> hora
		type="week" --> semanas
 	
<textarea></textarea> --> para textos de mais de uma linha
						    quebras de linha no html serão reproduzidas no campo
			rows e cols --> definem o tamanho do campo
			maxlength e minlength
			wrap="off" --> o texto não é quebrado para caber na caixa
			     "soft"
			     "hard"
			_outros atributos comuns 	
 			
-----------------------
<select></select> --> fornece um menu de opções
	name=""--> contém o valor selecionado
	multiple --> permite selecionar múltiplos
	size="" --> quantidade de opções que aparecem sem ter que usar scroll
	
	<option></option> --> contém cada opção		 	    
		value="" --> é o que será guardado no name

	<optgroup></optgroup>
		label="" --> titulo do grupo
		
		
